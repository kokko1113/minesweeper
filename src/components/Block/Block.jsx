import { useEffect, useState } from "react"
import "./Block.css"
import FieldObject from "../../constants/fieldObject"

export default function Block({ field, box, setIsGameover, y, x }) {
    const [isBlock, setIsBlock] = useState(false)//„Éñ„É≠„ÉÉ„ÇØ„ÅåÁ©∫„ÅÑ„Å¶„Çã„Åã„Å©„ÅÜ„Åã
    const { OBJECT } = FieldObject()

    let num = 0
    let item
    let count = 0
    let openX = 0
    let openY = 0
    const countDirection = [
        { x: -1, y: -1 },
        { x: 0, y: -1 },
        { x: 1, y: -1 },
        { x: 1, y: 0 },
        { x: 1, y: 1 },
        { x: 0, y: 1 },
        { x: -1, y: 1 },
        { x: -1, y: 1 },
    ]
    const openDirection = [
        { x: 0, y: -1 },
        { x: 1, y: 0 },
        { x: 0, y: 1 },
        { x: -1, y: 0 },
    ]

    for (let i = 0; i < countDirection.length; i++) {
        //„Éï„Ç£„Éº„É´„ÉâÂ§ñ„Å´Âá∫„Å¶„ÅÑ„Å™„ÅÑ„Åã„ÅÆÂà§ÂÆö
        if (y + (countDirection[i].y) >= 0 && x + (countDirection[i].x) >= 0 &&
            y + (countDirection[i].y) < field.length && x + (countDirection[i].x) < field.length) {
            //8ÊñπÂêë„ÅÆÁàÜÂºæ„ÅÆÊï∞„ÇíÁ¢∫Ë™ç
            if (field[y + (countDirection[i].y)][x + (countDirection[i].x)] == OBJECT.bomb) {
                count++
            }
        }
    }
    num = (count > 0 ? count : "")

    if (box == OBJECT.num) {
        item = num
    } else if (box == OBJECT.bomb) {
        item = "üí£"
    }

    const openBlock = () => {
        openX = x
        openY = y
        for (let i = 0; i < openDirection.length; i++) {
            if (y + (openDirection[i].y) >= 0 && x + (openDirection[i].x) >= 0 &&
                y + (openDirection[i].y) < field.length && x + (openDirection[i].x) < field.length) {
                if (num == 0) {//Á©∫„Åë„Åü„ÅÆ„Åå„ÄÅÂë®„Çä„Å´ÁàÜÂºæ„Åå„Å™„ÅÑ„Éñ„É≠„ÉÉ„ÇØ„Å†„Å£„Åü„ÇâÈö£Êé•„Åô„ÇãÂêå„Åò„Éñ„É≠„ÉÉ„ÇØ„ÇÇÁ©∫„Åë„Çã

                }
            }
        }
    }

    //Á©∫„Åë„Åü„Éñ„É≠„ÉÉ„ÇØ„Å´‰Ωï„Åå„ÅÇ„Çã„ÅãÂà§ÂÆö
    const checkBlock = () => {
        if (isBlock) {
            if (box == OBJECT.num) {

            } else if (box == OBJECT.bomb) {
                setTimeout(() => {
                    setIsGameover(true)
                }, 1000);
            }
        }
    }

    useEffect(() => {
        checkBlock()
    }, [isBlock])

    return (
        <>
            {!isBlock ?
                <div className="block" onClick={() => setIsBlock(true)}></div>
                : item
            }

        </>
    )
}